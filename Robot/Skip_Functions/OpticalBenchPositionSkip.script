def OpticalBenchPositionSkip():
  global _hidden_verificationVariable=0
  step_count_c46047d5_cfb2_445e_874e_4f44e68ef1ff = 0.0
  thread Step_Counter_Thread_312cfdf9_a2e7_4be3_8fdd_8d6d08f36024():
    while (True):
      step_count_c46047d5_cfb2_445e_874e_4f44e68ef1ff = step_count_c46047d5_cfb2_445e_874e_4f44e68ef1ff + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_312cfdf9_a2e7_4be3_8fdd_8d6d08f36024()
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
  set_gravity([0.0, 0.0, 9.82])
  set_target_payload(0.530000, [0.009000, -0.039000, 0.092000], [0.000534, 0.000534, 0.000534, 0.000000, 0.000000, 0.000000])
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_safety_mode_transition_hardness(1)
  global Al_plate=p[0.12405209206180495,-0.2666666051843552,0.020008101224669964,-9.276623980477388E-5,1.8107917580596192E-5,3.1233857134705927]
  global Frame2x2=p[0.18266245434305164,-0.34273121659514855,0.026002571110600767,-2.225423529876215E-4,3.0110667546023537E-4,3.1233976058306383]
  global Plane_1=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global URlogoTutorial=p[-0.08178353973148575,-0.3363174165299142,0.04788621506469384,-3.9746155723688456E-5,-3.4682148779121894E-5,-1.5668291789091222]
  global carousel=p[0.13865255139760183,-0.25132593351268107,0.051531504137083003,-4.453572132438073E-5,-1.3071222590669835E-4,-3.1349676625391965]
  global carouselrod=p[0.2020731702281844,-0.34951442511341274,0.1947611446273096,3.139766958234101,-0.10689428010274801,-1.1796370330365635E-5]
  global paper=p[-0.09670794781244417,-0.3283412964648025,0.027665994240809913,-3.2057893450593004E-5,2.867088716161181E-5,-1.6085327915291054]
  global rod=p[0.13368013097420872,-0.41123185103490206,0.09926814901395645,2.2214229924093103,-2.2214158162465862,-2.9165882738638143E-5]
  global timer_1=0
  global c2_p=p[-.028463494537, -.307727419006, .173332682584, -3.141059388184, -.056193760799, -.000004272450]
  global c2_q=[-1.2244494597064417, -1.496974529033043, -1.7373507022857666, -1.4773324069431801, 1.5717664957046509, 3.4508044719696045]
  global s2_p=p[-.028856690118, -.249726646426, .145170222541, 3.141026680054, .055975812019, -.000017180394]
  global s2_q=[-1.1368125120746058, -1.2298501592925568, -2.0743727684020996, -1.4073492002538224, 1.5715453624725342, 3.5388050079345703]
  global c1_p=p[.079726385078, -.307004063818, .173197835475, -3.141081840863, -.055829763070, .000000336873]
  global c1_q=[-0.8901303450213831, -1.5340925504318257, -1.703249454498291, -1.4742992383292695, 1.571800947189331, 3.7853426933288574]
  global s1_p=p[.079339633526, -.249019256999, .138958933641, -3.141083724909, -.056146777813, .000021861818]
  global s1_q=[-0.736511532460348, -1.2886369985393067, -2.066201686859131, -1.3568056237748642, 1.5716667175292969, 3.9390151500701904]
  global chipC_p=p[-.099700577098, -.183627440197, .208433402457, 3.139691259007, -.105394058226, -.000149781669]
  global chipC_q=[-1.3891781012164515, -1.0096948903850098, -1.88504958152771, -1.8167749843993128, 1.5708818435668945, 3.388993501663208]
  global Waypoint_16_p=p[-.125097928533, -.271984222044, .188211676824, -3.139810722578, .105446315311, .000070958927]
  global Waypoint_16_q=[-1.5480602423297327, -1.4491210740855713, -1.7099264860153198, -1.552596167927124, 1.5715936422348022, 3.23006010055542]
  global Waypoint_17_p=p[-.141183217597, -.367684006591, .188213447751, 3.139821760490, -.105397104768, -.000067867997]
  global Waypoint_17_q=[-1.597567383443014, -1.8740092716612757, -1.241610050201416, -1.5960084400572718, 1.5719740390777588, 3.1803600788116455]
  global Waypoint_18_p=p[-.141186577373, -.367686411739, .107859860046, -3.139820976140, .105390968966, .000092547028]
  global Waypoint_18_q=[-1.5976107756244105, -1.9259244404234828, -1.5538264513015747, -1.231882469063141, 1.5723183155059814, 3.180701494216919]
  global Waypoint_19_p=p[-.141186594370, -.367686758782, .107847232769, 3.121769556160, .351982630790, -.000102981587]
  global Waypoint_19_q=[-1.5976107756244105, -1.925906320611471, -1.553938388824463, -1.2317336064628144, 1.5723183155059814, 2.8890414237976074]
  global Waypoint_20_p=p[-.141167331490, -.367688230149, .107844494070, -3.111053531579, .436930784566, .000069472127]
  global Waypoint_20_q=[-1.597567383443014, -1.9259335003294886, -1.5538866519927979, -1.2318210166743775, 1.5723340511322021, 3.392702341079712]
  global Waypoint_21_p=p[-.141179460782, -.367685301796, .107849700384, 3.139814235977, -.105451286738, -.000062170911]
  global Waypoint_21_q=[-1.5976021925555628, -1.9259211025633753, -1.5538866519927979, -1.231813983326294, 1.5723376274108887, 3.180748701095581]
  global Waypoint_22_p=p[-.125093999497, -.367099400456, .187371407622, 3.139783011421, -.105392168035, -.000053869150]
  global Waypoint_22_q=[-1.5538747946368616, -1.846323629418844, -1.2822730541229248, -1.5829936466612757, 1.5719654560089111, 3.224064588546753]
  global Waypoint_23_p=p[-.120064390322, -.465070651334, .187365924664, 2.700279766902, -.088400420341, .019763045538]
  global Waypoint_23_q=[-1.5412524382220667, -1.9475652180113734, -1.406833291053772, -0.9173591893962403, 1.5603561401367188, 3.2332537174224854]
  global Waypoint_24_p=p[-.125099110421, -.299097154487, .189878767902, 3.139750209928, -.105401717856, -.000111797080]
  global Waypoint_24_q=[-1.550074879323141, -1.5617311683348198, -1.5979981422424316, -1.5518303674510499, 1.5716702938079834, 3.2279696464538574]
  global Waypoint_1_p=p[.263501689877, -.337317763427, .239349489480, 3.139797243720, -.105347053477, -.000037720516]
  global Waypoint_1_q=[-0.5959728399859827, -2.1057659588255824, -0.6533136367797852, -1.9525557957091273, 1.5718059539794922, 4.181682586669922]
  global Waypoint_2_p=p[.265438435610, -.352444474661, .141740907029, 3.139726376264, -.105360108121, -.000022031768]
  global Waypoint_2_q=[-0.6231134573565882, -2.1016999683775843, -1.126999020576477, -1.4828875821879883, 1.5722739696502686, 4.154912948608398]
  global Waypoint_3_p=p[.206441973084, -.349241721273, .141737893294, 3.139734184252, -.105329347268, -.000022485776]
  global Waypoint_3_q=[-0.7073677221881312, -1.9410401783385218, -1.3681066036224365, -1.4024366003325959, 1.5721865892410278, 4.070710182189941]
  global Waypoint_4_p=p[.157616611756, -.378012026932, .141738203587, 3.139764187573, -.105376653239, -.000076760662]
  global Waypoint_4_q=[-0.8494070211993616, -1.9579774341978968, -1.3439116477966309, -1.409730003481247, 1.5722019672393799, 3.928692579269409]
  global Waypoint_5_p=p[.109134761588, -.393436595889, .141742225598, 3.139732501163, -.105376381431, -.000050533951]
  global Waypoint_5_q=[-0.972816292439596, -1.9523960552611292, -1.3519116640090942, -1.4072665137103577, 1.5721949338912964, 3.805286407470703]
  global Waypoint_6_p=p[-.188131250090, -.345166366147, .141750553976, 3.139727051239, -.105353578209, -.000024875816]
  global Waypoint_6_q=[-1.7293437162982386, -1.8864180050291957, -1.4439769983291626, -1.381135032778122, 1.572224736213684, 3.0487747192382812]
  global Waypoint_7_p=p[-.131564048097, -.216205376465, .141741700579, 3.139714533984, -.105382776464, -.000044168049]
  global Waypoint_7_q=[-1.572542969380514, -1.2417927545360108, -2.0833356380462646, -1.3863917154124756, 1.571577787399292, 3.2058310508728027]
  global timer_1_is_counting=False
  thread Timer_Thread():
    while (True):
      if (timer_1_is_counting):
        timer_1 = timer_1 + get_steptime()
      end
      sync()
    end
  end
  run Timer_Thread()
  def CircleAllangles_1():
    $ 154 "CircleAllangles_1" "noBreak"
    $ 155 "r≔25/1000"
    global r=25/1000
    $ 156 "A≔31"
    global A=31
    $ 157 "A≔A*3.1416/180"
    global A=A*3.1416/180
    $ 158 "p0≔p[c[0]-r,c[1],c[2],c[3],c[4],c[5]-1.5*A]"
    global p0=p[c[0]-r,c[1],c[2],c[3],c[4],c[5]-1.5*A]
    $ 159 "p45≔p[c[0]-0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]-A/1.1]"
    global p45=p[c[0]-0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]-A/1.1]
    $ 160 "p90≔p[c[0],c[1]+r,c[2],c[3]-A,c[4],c[5]]"
    global p90=p[c[0],c[1]+r,c[2],c[3]-A,c[4],c[5]]
    $ 161 "p135≔p[c[0]+0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]+A/1.1]"
    global p135=p[c[0]+0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]+A/1.1]
    $ 162 "p180≔p[c[0]+r,c[1],c[2],c[3],c[4],c[5]+1.5*A]"
    global p180=p[c[0]+r,c[1],c[2],c[3],c[4],c[5]+1.5*A]
    $ 163 "p225≔p[c[0]+0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]+A/1.1]"
    global p225=p[c[0]+0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]+A/1.1]
    $ 164 "p270≔p[c[0],c[1]-r,c[2],c[3]+A,c[4],c[5]]"
    global p270=p[c[0],c[1]-r,c[2],c[3]+A,c[4],c[5]]
    $ 165 "p315≔p[c[0]-0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]-A/1.1]"
    global p315=p[c[0]-0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]-A/1.1]
    $ 166 "Set atomization=On"
    set_standard_digital_out(1, True)
    $ 167 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 168 "MoveL"
    $ 169 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.2, v=0.12, r=0.01)
    $ 170 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.2, v=0.12, r=0.01)
    $ 171 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.2, v=0.12, r=0.01)
    $ 172 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.2, v=0.12, r=0.01)
    $ 173 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.2, v=0.12, r=0.01)
    $ 174 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 175 "Wait: 0.1"
    sleep(0.1)
    $ 176 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 177 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.2, v=0.12, r=0.01)
    $ 178 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.2, v=0.12, r=0.01)
    $ 179 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.2, v=0.12, r=0.01)
    $ 180 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.2, v=0.12, r=0.01)
    $ 181 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.2, v=0.12, r=0.01)
    $ 182 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 183 "Wait: 0.1"
    sleep(0.1)
    $ 184 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 185 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.2, v=0.12, r=0.01)
    $ 186 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.2, v=0.12, r=0.01)
    $ 187 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.2, v=0.12, r=0.01)
    $ 188 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.2, v=0.12, r=0.01)
    $ 189 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 190 "Wait: 0.1"
    sleep(0.1)
    $ 191 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 192 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.2, v=0.12, r=0.01)
    $ 193 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.2, v=0.12, r=0.01)
    $ 194 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.2, v=0.12, r=0.01)
    $ 195 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 196 "Wait: 0.1"
    sleep(0.1)
    $ 197 "Set atomization=Off"
    set_standard_digital_out(1, False)
  end
  def Spraychip2():
    $ 198 "Spraychip2" "noBreak"
    $ 199 "MoveJ"
    $ 200 "chipC" "breakAfter"
    movej(get_inverse_kin(chipC_p, qnear=chipC_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 201 "c≔chipC"
    global c=chipC_p
    $ 202 "rc≔27/1000"
    global rc=27/1000
    $ 203 "p0≔p[c[0]+rc,c[1],c[2],c[3],c[4],c[5]-1.5*0]"
    global p0=p[c[0]+rc,c[1],c[2],c[3],c[4],c[5]-1.5*0]
    $ 204 "p45≔p[c[0]+0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]-0/1.1]"
    global p45=p[c[0]+0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]-0/1.1]
    $ 205 "p90≔p[c[0],c[1]+rc,c[2],c[3]-0,c[4],c[5]]"
    global p90=p[c[0],c[1]+rc,c[2],c[3]-0,c[4],c[5]]
    $ 206 "p135≔p[c[0]-0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]+0/1.1]"
    global p135=p[c[0]-0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]+0/1.1]
    $ 207 "p180≔p[c[0]-rc,c[1],c[2],c[3],c[4],c[5]+1.5*0]"
    global p180=p[c[0]-rc,c[1],c[2],c[3],c[4],c[5]+1.5*0]
    $ 208 "p225≔p[c[0]-0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]+0/1.1]"
    global p225=p[c[0]-0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]+0/1.1]
    $ 209 "p270≔p[c[0],c[1]-rc,c[2],c[3]+0,c[4],c[5]]"
    global p270=p[c[0],c[1]-rc,c[2],c[3]+0,c[4],c[5]]
    $ 210 "p315≔p[c[0]+0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]-0/1.1]"
    global p315=p[c[0]+0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]-0/1.1]
    $ 211 "Set atomization=On"
    set_standard_digital_out(1, True)
    $ 212 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 213 "MoveL"
    $ 214 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.3, v=0.07, r=0.01)
    $ 215 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.3, v=0.07, r=0.01)
    $ 216 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.3, v=0.07, r=0.01)
    $ 217 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.3, v=0.07, r=0.01)
    $ 218 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.3, v=0.07, r=0.01)
    $ 219 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 220 "Wait: 0.1"
    sleep(0.1)
    $ 221 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 222 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.3, v=0.07, r=0.01)
    $ 223 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.3, v=0.07, r=0.01)
    $ 224 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.3, v=0.07, r=0.01)
    $ 225 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.3, v=0.07, r=0.01)
    $ 226 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.3, v=0.07, r=0.01)
    $ 227 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 228 "Wait: 0.1"
    sleep(0.1)
    $ 229 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 230 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.3, v=0.07, r=0.01)
    $ 231 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.3, v=0.07, r=0.01)
    $ 232 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.3, v=0.07, r=0.01)
    $ 233 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.3, v=0.07, r=0.01)
    $ 234 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.3, v=0.07, r=0.01)
    $ 235 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.3, v=0.07, r=0.01)
    $ 236 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.3, v=0.07, r=0.01)
    $ 237 "MoveJ"
    $ 239 "chipC" "breakAfter"
    movej(get_inverse_kin(chipC_p, qnear=chipC_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 240 "Wait: 0.2"
    sleep(0.2)
    $ 241 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 242 "Wait: 0.1"
    sleep(0.1)
    $ 243 "Set atomization=Off"
    set_standard_digital_out(1, False)
  end
  def spray2():
    $ 244 "spray2" "noBreak"
    $ 245 "r≔45/1000"
    global r=45/1000
    $ 246 "A≔0"
    global A=0
    $ 247 "p0≔p[c[0]-r,c[1],c[2],c[3],c[4],c[5]-1.5*A]"
    global p0=p[c[0]-r,c[1],c[2],c[3],c[4],c[5]-1.5*A]
    $ 248 "p45≔p[c[0]-0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]-A/1.1]"
    global p45=p[c[0]-0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]-A/1.1]
    $ 249 "p90≔p[c[0],c[1]+r,c[2],c[3]-A,c[4],c[5]]"
    global p90=p[c[0],c[1]+r,c[2],c[3]-A,c[4],c[5]]
    $ 250 "p135≔p[c[0]+0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]+A/1.1]"
    global p135=p[c[0]+0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]+A/1.1]
    $ 251 "p180≔p[c[0]+r,c[1],c[2],c[3],c[4],c[5]+1.5*A]"
    global p180=p[c[0]+r,c[1],c[2],c[3],c[4],c[5]+1.5*A]
    $ 252 "p225≔p[c[0]+0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]+A/1.1]"
    global p225=p[c[0]+0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]+A/1.1]
    $ 253 "p270≔p[c[0],c[1]-r,c[2],c[3]+A,c[4],c[5]]"
    global p270=p[c[0],c[1]-r,c[2],c[3]+A,c[4],c[5]]
    $ 254 "p315≔p[c[0]-0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]-A/1.1]"
    global p315=p[c[0]-0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]-A/1.1]
    $ 255 "Set atomization=On"
    set_standard_digital_out(1, True)
    $ 256 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 257 "MoveL"
    $ 258 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.2, v=0.12, r=0.01)
    $ 259 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.2, v=0.12, r=0.01)
    $ 260 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.2, v=0.12, r=0.01)
    $ 261 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.2, v=0.12, r=0.01)
    $ 262 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.2, v=0.12, r=0.01)
    $ 263 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 264 "Wait: 0.1"
    sleep(0.1)
    $ 265 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 266 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.2, v=0.12, r=0.01)
    $ 267 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.2, v=0.12, r=0.01)
    $ 268 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.2, v=0.12, r=0.01)
    $ 269 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.2, v=0.12, r=0.01)
    $ 270 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.2, v=0.12, r=0.01)
    $ 271 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 272 "Wait: 0.1"
    sleep(0.1)
    $ 273 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 274 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.2, v=0.12, r=0.01)
    $ 275 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.2, v=0.12, r=0.01)
    $ 276 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.2, v=0.12, r=0.01)
    $ 277 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.2, v=0.12, r=0.01)
    $ 278 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 279 "Wait: 0.1"
    sleep(0.1)
    $ 280 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 281 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.2, v=0.12, r=0.01)
    $ 282 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.2, v=0.12, r=0.01)
    $ 283 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.2, v=0.12, r=0.01)
    $ 284 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 285 "Wait: 0.1"
    sleep(0.1)
    $ 286 "Set atomization=Off"
    set_standard_digital_out(1, False)
  end
  def clean():
    $ 287 "clean" "noBreak"
    $ 288 "MoveJ"
    $ 289 "Waypoint_16" "breakAfter"
    movej(get_inverse_kin(Waypoint_16_p, qnear=Waypoint_16_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 290 "Waypoint_17" "breakAfter"
    movej(get_inverse_kin(Waypoint_17_p, qnear=Waypoint_17_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 291 "MoveL"
    $ 292 "Waypoint_18" "breakAfter"
    movel(Waypoint_18_p, a=1.2, v=0.05)
    $ 293 "MoveL"
    $ 294 "Waypoint_19" "breakAfter"
    movel(Waypoint_19_p, a=1.2, v=0.05)
    $ 295 "MoveL"
    $ 296 "Waypoint_20" "breakAfter"
    movel(Waypoint_20_p, a=1.2, v=0.05)
    $ 297 "MoveL"
    $ 298 "Waypoint_21" "breakAfter"
    movel(Waypoint_21_p, a=1.2, v=0.05)
    $ 299 "MoveL"
    $ 300 "Waypoint_22" "breakAfter"
    movel(Waypoint_22_p, a=1.2, v=0.25)
    $ 301 "MoveJ"
    $ 302 "Waypoint_23" "breakAfter"
    movej(get_inverse_kin(Waypoint_23_p, qnear=Waypoint_23_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 303 "Set atomization=On"
    set_standard_digital_out(1, True)
    $ 304 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 305 "Wait: 0.2"
    sleep(0.2)
    $ 306 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 307 "Wait: 0.1"
    sleep(0.1)
    $ 308 "Set atomization=Off"
    set_standard_digital_out(1, False)
    $ 309 "MoveJ"
    $ 310 "Waypoint_24" "breakAfter"
    movej(get_inverse_kin(Waypoint_24_p, qnear=Waypoint_24_q), a=1.3962634015954636, v=1.0471975511965976)
  end
  def turntable():
    $ 311 "turntable" "noBreak"
    $ 312 "MoveJ"
    $ 313 "Waypoint_1" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_1_p)), qnear=Waypoint_1_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 314 "Waypoint_2" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_2_p)), qnear=Waypoint_2_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 315 "Waypoint_3" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_3_p)), qnear=Waypoint_3_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 316 "Waypoint_4" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_4_p)), qnear=Waypoint_4_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 317 "Waypoint_5" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_5_p)), qnear=Waypoint_5_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 318 "MoveJ"
    $ 319 "Waypoint_6" "breakAfter"
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_6_p)), qnear=Waypoint_6_q), a=1.3962634015954636, v=0.3141592653589793)
    $ 320 "Wait: 1.0"
    sleep(1.0)
    $ 321 "MoveJ"
    $ 322 "Waypoint_7" "breakAfter"
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_7_p)), qnear=Waypoint_7_q), a=1.3962634015954636, v=1.0471975511965976, r=0.02)
  end
  def SmallTunnel():
    $ 323 "SmallTunnel" "noBreak"
    $ 324 "q1≔p[q[0],q[1],q[2]+0.05,q[3],q[4],q[4]]"
    global q1=p[q[0],q[1],q[2]+0.05,q[3],q[4],q[4]]
    $ 325 "q2≔p[q[0],q[1],q[2]+0.02,q[3],q[4],q[5]]"
    global q2=p[q[0],q[1],q[2]+0.02,q[3],q[4],q[5]]
    $ 326 "Set atomization=On"
    set_standard_digital_out(1, True)
    $ 327 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 328 "Wait: 0.05"
    sleep(0.05)
    $ 329 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 330 "Wait: 0.1"
    sleep(0.1)
    $ 331 "Set atomization=Off"
    set_standard_digital_out(1, False)
    $ 332 "MoveL"
    $ 333 "q2" "breakAfter"
    movel(q2, a=1.2, v=0.25)
    $ 334 "Set atomization=On"
    set_standard_digital_out(1, True)
    $ 335 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 336 "q1" "breakAfter"
    movel(q1, a=1.2, v=0.25)
    $ 337 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 338 "Wait: 0.1"
    sleep(0.1)
    $ 339 "Set atomization=Off"
    set_standard_digital_out(1, False)
  end
  while (True):
    $ 2 "Robot Program"
    $ 3 "'Program is to be used for part #127765-201 rev A telescope optical bench'"
    # 'Program is to be used for part #127765-201 rev A telescope optical bench'
    $ 4 "'Program rev ___: mm/dd/yy note'"
    # 'Program rev ___: mm/dd/yy note'
    $ 5 "timer_1: Start"
    timer_1_is_counting = True
    $ 6 "r≔25/1000"
    global r=25/1000
    $ 7 "A≔25"
    global A=25
    $ 8 "A≔A*3.1416/180"
    global A=A*3.1416/180
    $ 9 "current_coat≔1"
    global current_coat=1
    $ 10 "position≔1"
    global position=1
    $ 11 "Loop_1≔1"
    global Loop_1=1
    $ 12 "sidenum≔2"
    global sidenum=2
    $ 14 "partnum≔2"
    global partnum=2
    $ 16 "coatnum≔2"
    global coatnum=2
    $ 17 "If partnum≤sidenum"
    global thread_flag_17=0
    thread Thread_if_17():
      $ 18 "Loop (coatnum)>0"
      thread Thread_while_18():
        while (True):
          $ 19 "partleft≔partnum"
          global partleft=partnum
          $ 20 "loopnum≔1"
          global loopnum=1
          $ 21 "Loop partleft>0"
          thread Thread_while_21():
            while (True):
              $ 22 "Call clean"
              clean()
              $ 23 "Call Spraychip2"
              Spraychip2()
              $ 24 "If loopnum≟1 or loopnum≟3 or loopnum≟5 or loopnum≟7 or loopnum≟9 or loopnum≟11"
              global thread_flag_24=0
              thread Thread_if_24():
                $ 54 "MoveJ"
                $ 55 "c2" "breakAfter"
                movej(get_inverse_kin(c2_p, qnear=c2_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 56 "c≔c2"
                global c=c2_p
                $ 57 "Call CircleAllangles_1"
                CircleAllangles_1()
                $ 58 "MoveJ"
                $ 59 "s2" "breakAfter"
                movej(get_inverse_kin(s2_p, qnear=s2_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 60 "q≔s2"
                global q=s2_p
                $ 61 "Call SmallTunnel"
                SmallTunnel()
                $ 62 "MoveJ"
                $ 63 "c" "breakAfter"
                movej(c, a=1.3962634015954636, v=1.0471975511965976)
                $ 65 "position≔position+1"
                global position=position+1
                thread_flag_24 = 1
              end
              if (loopnum == 1  or  loopnum == 3  or  loopnum == 5  or  loopnum == 7  or  loopnum == 9  or  loopnum == 11):
                global thread_handler_24=run Thread_if_24()
                while (thread_flag_24 == 0):
                  if not(loopnum == 1  or  loopnum == 3  or  loopnum == 5  or  loopnum == 7  or  loopnum == 9  or  loopnum == 11):
                    kill thread_handler_24
                    thread_flag_24 = 2
                  else:
                    sync()
                  end
                end
              else:
                thread_flag_24 = 2
              end
              if (thread_flag_24 == 2):
                $ 66 "Else" "noBreak"
                $ 95 "MoveJ"
                $ 96 "c1" "breakAfter"
                movej(get_inverse_kin(c1_p, qnear=c1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 97 "c≔c1"
                global c=c1_p
                $ 98 "Call CircleAllangles_1"
                CircleAllangles_1()
                $ 99 "MoveJ"
                $ 100 "s1" "breakAfter"
                set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
                movej(get_inverse_kin(s1_p, qnear=s1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 101 "q≔s1"
                global q=s1_p
                $ 102 "Call SmallTunnel"
                SmallTunnel()
                $ 103 "MoveJ"
                $ 104 "c" "breakAfter"
                movej(c, a=1.3962634015954636, v=1.0471975511965976)
                $ 106 "position≔position+1"
                global position=position+1
              end
              $ 107 "loopnum≔loopnum+1"
              global loopnum=loopnum+1
              $ 108 "partleft≔partleft-1"
              global partleft=partleft-1
            end
          end
          if (partleft>0):
            global thread_handler_21=run Thread_while_21()
            while (partleft>0):
              sync()
            end
            kill thread_handler_21
          end
          $ 109 "i≔0"
          global i=0
          $ 110 "coatnum≔coatnum-1"
          global coatnum=coatnum-1
        end
      end
      if ((coatnum)>0):
        global thread_handler_18=run Thread_while_18()
        while ((coatnum)>0):
          sync()
        end
        kill thread_handler_18
      end
      $ 111 "Halt"
      halt
      thread_flag_17 = 1
    end
    if (partnum <= sidenum):
      global thread_handler_17=run Thread_if_17()
      while (thread_flag_17 == 0):
        if not(partnum <= sidenum):
          kill thread_handler_17
          thread_flag_17 = 2
        else:
          sync()
        end
      end
    else:
      thread_flag_17 = 2
    end
    if (thread_flag_17 == 2):
      $ 112 "Else" "noBreak"
      $ 113 "Loop (coatnum)>0"
      thread Thread_while_113():
        while (True):
          $ 114 "partleft≔partnum"
          global partleft=partnum
          $ 115 "loopnum≔1"
          global loopnum=1
          $ 116 "turnnum≔0"
          global turnnum=0
          $ 117 "Loop partleft>0"
          thread Thread_while_117():
            while (True):
              $ 118 "Call clean"
              clean()
              $ 119 "Call Spraychip2"
              Spraychip2()
              $ 120 "If loopnum≟1 or loopnum≟3 or loopnum≟5 or loopnum≟7 or loopnum≟9 or loopnum≟11"
              global thread_flag_120=0
              thread Thread_if_120():
                $ 121 "MoveJ"
                $ 122 "c2" "breakAfter"
                movej(get_inverse_kin(c2_p, qnear=c2_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 123 "c≔c2"
                global c=c2_p
                $ 124 "Call CircleAllangles_1"
                CircleAllangles_1()
                $ 125 "MoveJ"
                $ 126 "s2" "breakAfter"
                movej(get_inverse_kin(s2_p, qnear=s2_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 127 "q≔s2"
                global q=s2_p
                $ 128 "Call SmallTunnel"
                SmallTunnel()
                $ 129 "MoveJ"
                $ 130 "c" "breakAfter"
                movej(c, a=1.3962634015954636, v=1.0471975511965976)
                $ 132 "position≔position+1"
                global position=position+1
                thread_flag_120 = 1
              end
              if (loopnum == 1  or  loopnum == 3  or  loopnum == 5  or  loopnum == 7  or  loopnum == 9  or  loopnum == 11):
                global thread_handler_120=run Thread_if_120()
                while (thread_flag_120 == 0):
                  if not(loopnum == 1  or  loopnum == 3  or  loopnum == 5  or  loopnum == 7  or  loopnum == 9  or  loopnum == 11):
                    kill thread_handler_120
                    thread_flag_120 = 2
                  else:
                    sync()
                  end
                end
              else:
                thread_flag_120 = 2
              end
              if (thread_flag_120 == 2):
                $ 133 "Else" "noBreak"
                $ 134 "MoveJ"
                $ 135 "c1" "breakAfter"
                movej(get_inverse_kin(c1_p, qnear=c1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 136 "c≔c1"
                global c=c1_p
                $ 137 "Call CircleAllangles_1"
                CircleAllangles_1()
                $ 138 "MoveJ"
                $ 139 "s1" "breakAfter"
                set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
                movej(get_inverse_kin(s1_p, qnear=s1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 140 "q≔s1"
                global q=s1_p
                $ 141 "Call SmallTunnel"
                SmallTunnel()
                $ 142 "MoveJ"
                $ 143 "c" "breakAfter"
                movej(c, a=1.3962634015954636, v=1.0471975511965976)
                $ 145 "position≔position+1"
                global position=position+1
              end
              $ 146 "loopnum≔loopnum+1"
              global loopnum=loopnum+1
              $ 147 "partleft≔partleft-1"
              global partleft=partleft-1
            end
          end
          if (partleft>0):
            global thread_handler_117=run Thread_while_117()
            while (partleft>0):
              sync()
            end
            kill thread_handler_117
          end
          $ 148 "i≔0"
          global i=0
          $ 149 "Loop (6-turnnum)>0"
          thread Thread_while_149():
            while (True):
              $ 150 "Call turntable"
              turntable()
              $ 151 "turnnum≔turnnum+1"
              global turnnum=turnnum+1
            end
          end
          if ((6-turnnum)>0):
            global thread_handler_149=run Thread_while_149()
            while ((6-turnnum)>0):
              sync()
            end
            kill thread_handler_149
          end
          $ 152 "coatnum≔coatnum-1"
          global coatnum=coatnum-1
        end
      end
      if ((coatnum)>0):
        global thread_handler_113=run Thread_while_113()
        while ((coatnum)>0):
          sync()
        end
        kill thread_handler_113
      end
      $ 153 "Halt"
      halt
    end
  end
end
