def TorqueTubePositionSkip():
  global _hidden_verificationVariable=0
  step_count_e244bee2_0036_4369_bf70_cb7fdd4f25f6 = 0.0
  thread Step_Counter_Thread_b1bccf12_386c_4b51_8db2_a8c7933feec7():
    while (True):
      step_count_e244bee2_0036_4369_bf70_cb7fdd4f25f6 = step_count_e244bee2_0036_4369_bf70_cb7fdd4f25f6 + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_b1bccf12_386c_4b51_8db2_a8c7933feec7()
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
  set_gravity([0.0, 0.0, 9.82])
  set_target_payload(0.530000, [0.009000, -0.039000, 0.092000], [0.000534, 0.000534, 0.000534, 0.000000, 0.000000, 0.000000])
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_safety_mode_transition_hardness(1)
  global Al_plate=p[0.12405209206180495,-0.2666666051843552,0.020008101224669964,-9.276623980477388E-5,1.8107917580596192E-5,3.1233857134705927]
  global Frame2x2=p[0.18266245434305164,-0.34273121659514855,0.026002571110600767,-2.225423529876215E-4,3.0110667546023537E-4,3.1233976058306383]
  global URlogoTutorial=p[-0.08178353973148575,-0.3363174165299142,0.04788621506469384,-3.9746155723688456E-5,-3.4682148779121894E-5,-1.5668291789091222]
  global carouselrod=p[0.2020731702281844,-0.34951442511341274,0.1947611446273096,3.139766958234101,-0.10689428010274801,-1.1796370330365635E-5]
  global paper=p[-0.09670794781244417,-0.3283412964648025,0.027665994240809913,-3.2057893450593004E-5,2.867088716161181E-5,-1.6085327915291054]
  global rod=p[0.13368013097420872,-0.41123185103490206,0.09926814901395645,2.2214229924093103,-2.2214158162465862,-2.9165882738638143E-5]
  # begin: URCap Installation Node
  #   Source: External Control, 1.0.5, FZI Research Center for Information Technology
  #   Type: External Control
  # end: URCap Installation Node
  global timer_1=0
  global cen1_p=p[.084156168257, -.297376119648, .183250945339, -3.141382792510, .033296213102, -.000152379206]
  global cen1_q=[-0.8564942518817347, -1.4941793245128174, -1.693294882774353, -1.524116114979126, 1.5718024969100952, 3.875688076019287]
  global Waypoint_20_p=p[.040202232210, -.260214995195, .152621673736, 2.696064585917, -.140781751775, .836473301332]
  global Waypoint_20_q=[-1.2176573912249964, -1.171729401951172, -2.522552967071533, -0.45663173616442876, 1.9728578329086304, 3.716249704360962]
  global Waypoint_21_p=p[.115487572708, -.270825611157, .138862788345, 2.569364691060, .502080302579, -.907812061210]
  global Waypoint_21_q=[-0.20452720323671514, -1.4722945627621193, -1.9863433837890625, -1.7760454616942347, 0.992058515548706, 4.279121398925781]
  global Waypoint_8_p=p[.089428039903, -.315047365923, .152399225158, -2.507499165703, .098299954668, .264244451249]
  global Waypoint_8_q=[-0.9977858702289026, -2.2288624248900355, -0.8256717920303345, -2.288084169427389, 1.7483140230178833, 3.7329461574554443]
  global cen2_p=p[-.045938512414, -.296241720541, .183259320782, -3.141347146384, .033195587645, -.000171773331]
  global cen2_q=[-1.2716119925128382, -1.451684945528843, -1.730947494506836, -1.5290306446007271, 1.5717889070510864, 3.460521697998047]
  global Waypoint_23_p=p[-.097309028312, -.272479476843, .140703458847, -2.777292482910, .672051406030, -1.281500714844]
  global Waypoint_23_q=[-1.97319204012026, -1.7494741878905238, -1.881304144859314, -1.277160720234253, 2.397791624069214, 3.1272385120391846]
  global Waypoint_24_p=p[-.009625458726, -.269162000015, .147414796754, 2.622155264277, .364307812770, -.912959697513]
  global Waypoint_24_q=[-0.4218066374408167, -1.0633257192424317, -2.2341132164001465, -1.8451172314085902, 0.9446544647216797, 4.154300689697266]
  global Waypoint_18_p=p[-.034104807732, -.326218636999, .161725378493, -2.487099527973, -.426817625158, .141498714181]
  global Waypoint_18_q=[-1.2526162306415003, -2.1610685787596644, -0.8814555406570435, -2.2928935490050257, 1.5552400350570679, 3.122783899307251]
  global Waypoint_1_p=p[.263501689877, -.337317763427, .239349489480, 3.139797243720, -.105347053477, -.000037720516]
  global Waypoint_1_q=[-0.5959728399859827, -2.1057659588255824, -0.6533136367797852, -1.9525557957091273, 1.5718059539794922, 4.181682586669922]
  global Waypoint_2_p=p[.265438435610, -.352444474661, .141740907029, 3.139726376264, -.105360108121, -.000022031768]
  global Waypoint_2_q=[-0.6231134573565882, -2.1016999683775843, -1.126999020576477, -1.4828875821879883, 1.5722739696502686, 4.154912948608398]
  global Waypoint_3_p=p[.206441973084, -.349241721273, .141737893294, 3.139734184252, -.105329347268, -.000022485776]
  global Waypoint_3_q=[-0.7073677221881312, -1.9410401783385218, -1.3681066036224365, -1.4024366003325959, 1.5721865892410278, 4.070710182189941]
  global Waypoint_4_p=p[.157616611756, -.378012026932, .141738203587, 3.139764187573, -.105376653239, -.000076760662]
  global Waypoint_4_q=[-0.8494070211993616, -1.9579774341978968, -1.3439116477966309, -1.409730003481247, 1.5722019672393799, 3.928692579269409]
  global Waypoint_5_p=p[.109134761588, -.393436595889, .141742225598, 3.139732501163, -.105376381431, -.000050533951]
  global Waypoint_5_q=[-0.972816292439596, -1.9523960552611292, -1.3519116640090942, -1.4072665137103577, 1.5721949338912964, 3.805286407470703]
  global Waypoint_6_p=p[-.188131250090, -.345166366147, .141750553976, 3.139727051239, -.105353578209, -.000024875816]
  global Waypoint_6_q=[-1.7293437162982386, -1.8864180050291957, -1.4439769983291626, -1.381135032778122, 1.572224736213684, 3.0487747192382812]
  global Waypoint_7_p=p[-.131564048097, -.216205376465, .141741700579, 3.139714533984, -.105382776464, -.000044168049]
  global Waypoint_7_q=[-1.572542969380514, -1.2417927545360108, -2.0833356380462646, -1.3863917154124756, 1.571577787399292, 3.2058310508728027]
  global chipC_p=p[-.114913600064, -.195915146031, .200001851810, -3.139710245406, .105435540076, .000120104553]
  global chipC_q=[-1.4853223005877894, -1.0990758401206513, -1.8874671459197998, -1.7252069912352503, 1.5711065530776978, 3.2928688526153564]
  global Waypoint_15_p=p[-.095432697794, -.195780544149, .221138492094, -3.139730675267, .105475286729, .000106110234]
  global Waypoint_15_q=[-1.3777254263507288, -1.0700816077044983, -1.7990812063217163, -1.842569967309469, 1.5709657669067383, 3.4004311561584473]
  global Waypoint_10_p=p[-.125097928533, -.271984222044, .188211676824, -3.139810722578, .105446315311, .000070958927]
  global Waypoint_10_q=[-1.5480602423297327, -1.4491210740855713, -1.7099264860153198, -1.552596167927124, 1.5715936422348022, 3.23006010055542]
  global Waypoint_11_p=p[-.147087425658, -.369119738864, .188213024771, -3.139805161175, .105424882353, .000073588451]
  global Waypoint_11_q=[-1.6132424513446253, -1.890120645562643, -1.2198617458343506, -1.6016651592650355, 1.5719811916351318, 3.1646969318389893]
  global Waypoint_12_p=p[-.147089104801, -.369120918758, .107724790532, -3.139816589843, .105461494706, .000061596821]
  global Waypoint_12_q=[-1.6132896582232874, -1.9404455624022425, -1.5337567329406738, -1.237432376747467, 1.5723495483398438, 3.1650607585906982]
  global Waypoint_13_p=p[-.147087180349, -.369115465243, .107723230087, -3.103300801910, .488849325194, .000053232426]
  global Waypoint_13_q=[-1.6132896582232874, -1.940441747704977, -1.5337600708007812, -1.23745612919841, 1.5723578929901123, 3.4103925228118896]
  global Waypoint_14_p=p[-.147093956722, -.369121305734, .107725184252, 3.124945192412, .322973373551, -.000062737153]
  global Waypoint_14_q=[-1.6133025328265589, -1.9404455624022425, -1.5337600708007812, -1.2374165815166016, 1.5723495483398438, 2.891921043395996]
  global Waypoint_16_p=p[-.147091147244, -.369120837529, .181368783881, -3.140009849354, .099397823289, .000066039668]
  global Waypoint_16_q=[-1.6132553259478968, -1.88964905361318, -1.2526137828826904, -1.569376556235813, 1.5720183849334717, 3.160874605178833]
  global Waypoint_9_p=p[-.120064390322, -.465070651334, .187365924664, 2.700279766902, -.088400420341, .019763045538]
  global Waypoint_9_q=[-1.5412524382220667, -1.9475652180113734, -1.406833291053772, -0.9173591893962403, 1.5603561401367188, 3.2332537174224854]
  global Waypoint_17_p=p[-.125099110421, -.299097154487, .189878767902, 3.139750209928, -.105401717856, -.000111797080]
  global Waypoint_17_q=[-1.550074879323141, -1.5617311683348198, -1.5979981422424316, -1.5518303674510499, 1.5716702938079834, 3.2279696464538574]
  global timer_1_is_counting=False
  thread Timer_Thread():
    while (True):
      if (timer_1_is_counting):
        timer_1 = timer_1 + get_steptime()
      end
      sync()
    end
  end
  run Timer_Thread()
  def CircleAllangles_1():
    $ 387 "CircleAllangles_1" "noBreak"
    $ 388 "p0≔p[c[0]-r,c[1],c[2],c[3],c[4],c[5]-1.5*A]"
    global p0=p[c[0]-r,c[1],c[2],c[3],c[4],c[5]-1.5*A]
    $ 389 "p45≔p[c[0]-0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]-A/1.1]"
    global p45=p[c[0]-0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]-A/1.1]
    $ 390 "p90≔p[c[0],c[1]+r,c[2],c[3]-A,c[4],c[5]]"
    global p90=p[c[0],c[1]+r,c[2],c[3]-A,c[4],c[5]]
    $ 391 "p135≔p[c[0]+0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]+A/1.1]"
    global p135=p[c[0]+0.71*r,c[1]+0.71*r,c[2],c[3]-A/1.1,c[4],c[5]+A/1.1]
    $ 392 "p180≔p[c[0]+r,c[1],c[2],c[3],c[4],c[5]+1.5*A]"
    global p180=p[c[0]+r,c[1],c[2],c[3],c[4],c[5]+1.5*A]
    $ 393 "p225≔p[c[0]+0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]+A/1.1]"
    global p225=p[c[0]+0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]+A/1.1]
    $ 394 "p270≔p[c[0],c[1]-r,c[2],c[3]+A,c[4],c[5]]"
    global p270=p[c[0],c[1]-r,c[2],c[3]+A,c[4],c[5]]
    $ 395 "p315≔p[c[0]-0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]-A/1.1]"
    global p315=p[c[0]-0.71*r,c[1]-0.71*r,c[2],c[3]+A/1.1,c[4],c[5]-A/1.1]
    $ 398 "MoveL"
    $ 399 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.2, v=0.07, r=0.01)
    $ 400 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.2, v=0.07, r=0.01)
    $ 401 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.2, v=0.07, r=0.01)
    $ 402 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.2, v=0.07, r=0.01)
    $ 403 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.2, v=0.07, r=0.01)
    $ 405 "Wait: 0.1"
    sleep(0.1)
    $ 407 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.2, v=0.07, r=0.01)
    $ 408 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.2, v=0.07, r=0.01)
    $ 409 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.2, v=0.07, r=0.01)
    $ 410 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.2, v=0.07, r=0.01)
    $ 411 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.2, v=0.07, r=0.01)
    $ 413 "Wait: 0.1"
    sleep(0.1)
    $ 415 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.2, v=0.07, r=0.01)
    $ 416 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.2, v=0.07, r=0.01)
    $ 417 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.2, v=0.07, r=0.01)
    $ 418 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.2, v=0.07, r=0.01)
    $ 420 "Wait: 0.1"
    sleep(0.1)
    $ 422 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.2, v=0.07, r=0.01)
    $ 423 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.2, v=0.07, r=0.01)
    $ 424 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.2, v=0.07, r=0.01)
    $ 426 "Wait: 0.5"
    sleep(0.5)
  end
  def turntable():
    $ 470 "turntable" "noBreak"
    $ 471 "MoveJ"
    $ 472 "Waypoint_1" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_1_p)), qnear=Waypoint_1_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 473 "Waypoint_2" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_2_p)), qnear=Waypoint_2_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 474 "Waypoint_3" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_3_p)), qnear=Waypoint_3_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 475 "Waypoint_4" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_4_p)), qnear=Waypoint_4_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 476 "Waypoint_5" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_5_p)), qnear=Waypoint_5_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 477 "MoveJ"
    $ 478 "Waypoint_6" "breakAfter"
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_6_p)), qnear=Waypoint_6_q), a=1.3962634015954636, v=0.3141592653589793)
    $ 479 "Wait: 1.0"
    sleep(1.0)
    $ 480 "MoveJ"
    $ 481 "Waypoint_7" "breakAfter"
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115579, .194760490892, -3.139766958285, .106894280104, .000011796367], Waypoint_7_p)), qnear=Waypoint_7_q), a=1.3962634015954636, v=1.0471975511965976, r=0.02)
  end
  def Spraychip2():
    $ 482 "Spraychip2" "noBreak"
    $ 483 "MoveJ"
    $ 484 "chipC" "breakAfter"
    movej(get_inverse_kin(chipC_p, qnear=chipC_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 485 "c≔chipC"
    global c=chipC_p
    $ 486 "rc≔24/1000"
    global rc=24/1000
    $ 487 "p0≔p[c[0]+rc,c[1],c[2],c[3],c[4],c[5]-1.5*0]"
    global p0=p[c[0]+rc,c[1],c[2],c[3],c[4],c[5]-1.5*0]
    $ 488 "p45≔p[c[0]+0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]-0/1.1]"
    global p45=p[c[0]+0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]-0/1.1]
    $ 489 "p90≔p[c[0],c[1]+rc,c[2],c[3]-0,c[4],c[5]]"
    global p90=p[c[0],c[1]+rc,c[2],c[3]-0,c[4],c[5]]
    $ 490 "p135≔p[c[0]-0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]+0/1.1]"
    global p135=p[c[0]-0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]+0/1.1]
    $ 491 "p180≔p[c[0]-rc,c[1],c[2],c[3],c[4],c[5]+1.5*0]"
    global p180=p[c[0]-rc,c[1],c[2],c[3],c[4],c[5]+1.5*0]
    $ 492 "p225≔p[c[0]-0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]+0/1.1]"
    global p225=p[c[0]-0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]+0/1.1]
    $ 493 "p270≔p[c[0],c[1]-rc,c[2],c[3]+0,c[4],c[5]]"
    global p270=p[c[0],c[1]-rc,c[2],c[3]+0,c[4],c[5]]
    $ 494 "p315≔p[c[0]+0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]-0/1.1]"
    global p315=p[c[0]+0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]-0/1.1]
    $ 497 "MoveL"
    $ 498 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.3, v=0.03, r=0.01)
    $ 499 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.3, v=0.03, r=0.01)
    $ 500 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.3, v=0.03, r=0.01)
    $ 501 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.3, v=0.03, r=0.01)
    $ 502 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.3, v=0.03, r=0.01)
    $ 504 "Wait: 0.1"
    sleep(0.1)
    $ 506 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.3, v=0.03, r=0.01)
    $ 507 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.3, v=0.03, r=0.01)
    $ 508 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.3, v=0.03, r=0.01)
    $ 509 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.3, v=0.03, r=0.01)
    $ 510 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.3, v=0.03, r=0.01)
    $ 512 "Wait: 0.1"
    sleep(0.1)
    $ 514 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.3, v=0.03, r=0.01)
    $ 515 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.3, v=0.03, r=0.01)
    $ 516 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.3, v=0.03, r=0.01)
    $ 517 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.3, v=0.03, r=0.01)
    $ 518 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.3, v=0.03, r=0.01)
    $ 519 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.3, v=0.03, r=0.01)
    $ 520 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.3, v=0.03, r=0.01)
    $ 521 "MoveJ"
    $ 522 "Waypoint_15" "breakAfter"
    movej(get_inverse_kin(Waypoint_15_p, qnear=Waypoint_15_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 523 "Wait: 0.5"
    sleep(0.5)
    $ 525 "Wait: 0.1"
    sleep(0.1)
  end
  def clean():
    $ 527 "clean" "noBreak"
    $ 528 "MoveJ"
    $ 529 "Waypoint_10" "breakAfter"
    movej(get_inverse_kin(Waypoint_10_p, qnear=Waypoint_10_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 530 "Waypoint_11" "breakAfter"
    movej(get_inverse_kin(Waypoint_11_p, qnear=Waypoint_11_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 531 "MoveL"
    $ 532 "Waypoint_12" "breakAfter"
    movel(Waypoint_12_p, a=1.2, v=0.05)
    $ 533 "MoveL"
    $ 534 "Waypoint_13" "breakAfter"
    movel(Waypoint_13_p, a=1.2, v=0.05)
    $ 535 "MoveL"
    $ 536 "Waypoint_14" "breakAfter"
    movel(Waypoint_14_p, a=1.2, v=0.05)
    $ 537 "MoveL"
    $ 538 "Waypoint_16" "breakAfter"
    movel(Waypoint_16_p, a=1.2, v=0.25)
    $ 539 "MoveJ"
    $ 540 "Waypoint_9" "breakAfter"
    movej(get_inverse_kin(Waypoint_9_p, qnear=Waypoint_9_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 543 "Wait: 0.5"
    sleep(0.5)
    $ 545 "Wait: 0.1"
    sleep(0.1)
    $ 547 "MoveJ"
    $ 548 "Waypoint_17" "breakAfter"
    movej(get_inverse_kin(Waypoint_17_p, qnear=Waypoint_17_q), a=1.3962634015954636, v=1.0471975511965976)
  end
  while (True):
    $ 2 "Robot Program"
    $ 3 "'Program to be used for part #126772-201 rev B telescope SRF cell'"
    # 'Program to be used for part #126772-201 rev B telescope SRF cell'
    $ 4 "'Program rev ___: mm/dd/yy note'"
    # 'Program rev ___: mm/dd/yy note'
    $ 5 "timer_1: Start"
    timer_1_is_counting = True
    $ 6 "'NOTE: watch for atomization air line catching while spraying 1st part on each side'"
    # 'NOTE: watch for atomization air line catching while spraying 1st part on each side'
    $ 7 "r≔48/1000"
    global r=48/1000
    $ 8 "A≔0/1000"
    global A=0/1000
    $ 9 "A≔A*3.1416/180"
    global A=A*3.1416/180
    $ 12 "current_coat≔1"
    global current_coat=1
    $ 14 "position≔1"
    global position=1
    $ 15 "sidenum≔2"
    global sidenum=2
    $ 17 "partnum≔2"
    global partnum=2
    $ 19 "coatnum≔2"
    global coatnum=2
    $ 20 "If partnum≤sidenum"
    global thread_flag_20=0
    thread Thread_if_20():
      $ 21 "Loop (coatnum)>0"
      thread Thread_while_21():
        while (True):
          $ 22 "partleft≔partnum"
          global partleft=partnum
          $ 23 "loopnum≔1"
          global loopnum=1
          $ 24 "Loop partleft>0"
          thread Thread_while_24():
            while (True):
              $ 25 "Call clean"
              clean()
              $ 26 "Call Spraychip2"
              Spraychip2()
              $ 27 "If loopnum≟1 or loopnum≟3 or loopnum≟5 or loopnum≟7 or loopnum≟9 or loopnum≟11"
              global thread_flag_27=0
              thread Thread_if_27():
                $ 29 "MoveJ"
                $ 30 "cen1" "breakAfter"
                set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
                movej(get_inverse_kin(cen1_p, qnear=cen1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 31 "c≔cen1"
                global c=cen1_p
                $ 32 "Call CircleAllangles_1"
                CircleAllangles_1()
                $ 33 "MoveJ"
                $ 34 "Waypoint_20" "breakAfter"
                movej(get_inverse_kin(Waypoint_20_p, qnear=Waypoint_20_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 37 "Wait: 0.1"
                sleep(0.1)
                $ 39 "Wait: 0.2"
                sleep(0.2)
                $ 41 "MoveJ"
                $ 42 "Waypoint_21" "breakAfter"
                movej(get_inverse_kin(Waypoint_21_p, qnear=Waypoint_21_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 45 "Wait: 0.1"
                sleep(0.1)
                $ 47 "Wait: 0.2"
                sleep(0.2)
                $ 49 "MoveJ"
                $ 50 "Waypoint_8" "breakAfter"
                movej(get_inverse_kin(Waypoint_8_p, qnear=Waypoint_8_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 53 "Wait: 0.1"
                sleep(0.1)
                $ 55 "Wait: 0.2"
                sleep(0.2)
                thread_flag_27 = 1
              end
              if (loopnum == 1  or  loopnum == 3  or  loopnum == 5  or  loopnum == 7  or  loopnum == 9  or  loopnum == 11):
                global thread_handler_27=run Thread_if_27()
                while (thread_flag_27 == 0):
                  if not(loopnum == 1  or  loopnum == 3  or  loopnum == 5  or  loopnum == 7  or  loopnum == 9  or  loopnum == 11):
                    kill thread_handler_27
                    thread_flag_27 = 2
                  else:
                    sync()
                  end
                end
              else:
                thread_flag_27 = 2
              end
              if (thread_flag_27 == 2):
                $ 57 "Else" "noBreak"
                $ 58 "MoveJ"
                $ 59 "cen2" "breakAfter"
                set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
                movej(get_inverse_kin(cen2_p, qnear=cen2_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 60 "c≔cen2"
                global c=cen2_p
                $ 61 "Call CircleAllangles_1"
                CircleAllangles_1()
                $ 62 "MoveJ"
                $ 63 "Waypoint_23" "breakAfter"
                movej(get_inverse_kin(Waypoint_23_p, qnear=Waypoint_23_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 66 "Wait: 0.1"
                sleep(0.1)
                $ 68 "Wait: 0.2"
                sleep(0.2)
                $ 70 "MoveJ"
                $ 71 "Waypoint_24" "breakAfter"
                movej(get_inverse_kin(Waypoint_24_p, qnear=Waypoint_24_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 74 "Wait: 0.1"
                sleep(0.1)
                $ 76 "Wait: 0.2"
                sleep(0.2)
                $ 78 "MoveJ"
                $ 79 "Waypoint_18" "breakAfter"
                movej(get_inverse_kin(Waypoint_18_p, qnear=Waypoint_18_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 82 "Wait: 0.1"
                sleep(0.1)
                $ 84 "Wait: 0.2"
                sleep(0.2)
              end
              $ 86 "loopnum≔loopnum+1"
              global loopnum=loopnum+1
              $ 87 "partleft≔partleft-1"
              global partleft=partleft-1
            end
          end
          if (partleft>0):
            global thread_handler_24=run Thread_while_24()
            while (partleft>0):
              sync()
            end
            kill thread_handler_24
          end
          $ 88 "i≔0"
          global i=0
          $ 89 "coatnum≔coatnum-1"
          global coatnum=coatnum-1
        end
      end
      if ((coatnum)>0):
        global thread_handler_21=run Thread_while_21()
        while ((coatnum)>0):
          sync()
        end
        kill thread_handler_21
      end
      $ 90 "Halt"
      halt
      thread_flag_20 = 1
    end
    if (partnum <= sidenum):
      global thread_handler_20=run Thread_if_20()
      while (thread_flag_20 == 0):
        if not(partnum <= sidenum):
          kill thread_handler_20
          thread_flag_20 = 2
        else:
          sync()
        end
      end
    else:
      thread_flag_20 = 2
    end
    if (thread_flag_20 == 2):
      $ 91 "Else" "noBreak"
      $ 92 "Loop (coatnum)>0"
      thread Thread_while_92():
        while (True):
          $ 93 "partleft≔partnum"
          global partleft=partnum
          $ 94 "loopnum≔1"
          global loopnum=1
          $ 95 "turnnum≔0"
          global turnnum=0
          $ 96 "Loop partleft>0"
          thread Thread_while_96():
            while (True):
              $ 97 "Call clean"
              clean()
              $ 98 "Call Spraychip2"
              Spraychip2()
              $ 99 "If loopnum≟1 or loopnum≟3 or loopnum≟5 or loopnum≟7 or loopnum≟9 or loopnum≟11"
              global thread_flag_99=0
              thread Thread_if_99():
                $ 101 "MoveJ"
                $ 102 "cen1" "breakAfter"
                set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
                movej(get_inverse_kin(cen1_p, qnear=cen1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 103 "c≔cen1"
                global c=cen1_p
                $ 104 "Call CircleAllangles_1"
                CircleAllangles_1()
                $ 105 "MoveJ"
                $ 106 "Waypoint_20" "breakAfter"
                movej(get_inverse_kin(Waypoint_20_p, qnear=Waypoint_20_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 109 "Wait: 0.1"
                sleep(0.1)
                $ 111 "Wait: 0.2"
                sleep(0.2)
                $ 113 "MoveJ"
                $ 114 "Waypoint_21" "breakAfter"
                movej(get_inverse_kin(Waypoint_21_p, qnear=Waypoint_21_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 117 "Wait: 0.1"
                sleep(0.1)
                $ 119 "Wait: 0.2"
                sleep(0.2)
                $ 121 "MoveJ"
                $ 122 "Waypoint_8" "breakAfter"
                movej(get_inverse_kin(Waypoint_8_p, qnear=Waypoint_8_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 125 "Wait: 0.1"
                sleep(0.1)
                $ 127 "Wait: 0.2"
                sleep(0.2)
                thread_flag_99 = 1
              end
              if (loopnum == 1  or  loopnum == 3  or  loopnum == 5  or  loopnum == 7  or  loopnum == 9  or  loopnum == 11):
                global thread_handler_99=run Thread_if_99()
                while (thread_flag_99 == 0):
                  if not(loopnum == 1  or  loopnum == 3  or  loopnum == 5  or  loopnum == 7  or  loopnum == 9  or  loopnum == 11):
                    kill thread_handler_99
                    thread_flag_99 = 2
                  else:
                    sync()
                  end
                end
              else:
                thread_flag_99 = 2
              end
              if (thread_flag_99 == 2):
                $ 129 "Else" "noBreak"
                $ 130 "MoveJ"
                $ 131 "cen2" "breakAfter"
                set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
                movej(get_inverse_kin(cen2_p, qnear=cen2_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 132 "c≔cen2"
                global c=cen2_p
                $ 133 "Call CircleAllangles_1"
                CircleAllangles_1()
                $ 134 "MoveJ"
                $ 135 "Waypoint_23" "breakAfter"
                movej(get_inverse_kin(Waypoint_23_p, qnear=Waypoint_23_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 138 "Wait: 0.1"
                sleep(0.1)
                $ 140 "Wait: 0.2"
                sleep(0.2)
                $ 142 "MoveJ"
                $ 143 "Waypoint_24" "breakAfter"
                movej(get_inverse_kin(Waypoint_24_p, qnear=Waypoint_24_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 146 "Wait: 0.1"
                sleep(0.1)
                $ 148 "Wait: 0.2"
                sleep(0.2)
                $ 150 "MoveJ"
                $ 151 "Waypoint_18" "breakAfter"
                movej(get_inverse_kin(Waypoint_18_p, qnear=Waypoint_18_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 154 "Wait: 0.1"
                sleep(0.1)
                $ 156 "Wait: 0.2"
                sleep(0.2)
                $ 158 "Call turntable"
                turntable()
                $ 159 "turnnum≔turnnum+1"
                global turnnum=turnnum+1
              end
              $ 160 "loopnum≔loopnum+1"
              global loopnum=loopnum+1
              $ 161 "partleft≔partleft-1"
              global partleft=partleft-1
            end
          end
          if (partleft>0):
            global thread_handler_96=run Thread_while_96()
            while (partleft>0):
              sync()
            end
            kill thread_handler_96
          end
          $ 162 "i≔0"
          global i=0
          $ 163 "Loop (6-turnnum)>0"
          thread Thread_while_163():
            while (True):
              $ 164 "Call turntable"
              turntable()
              $ 165 "turnnum≔turnnum+1"
              global turnnum=turnnum+1
            end
          end
          if ((6-turnnum)>0):
            global thread_handler_163=run Thread_while_163()
            while ((6-turnnum)>0):
              sync()
            end
            kill thread_handler_163
          end
          $ 166 "coatnum≔coatnum-1"
          global coatnum=coatnum-1
        end
      end
      if ((coatnum)>0):
        global thread_handler_92=run Thread_while_92()
        while ((coatnum)>0):
          sync()
        end
        kill thread_handler_92
      end
      $ 167 "Halt"
      halt
    end
    $ 168 "Loop_1≔1"
    global Loop_1=1
    $ 386 "timer_1: Stop"
    timer_1_is_counting = False
  end
end
