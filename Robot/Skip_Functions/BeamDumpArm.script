def BeamDumpArm():
  global _hidden_verificationVariable=0
  step_count_e9b0f761_9097_41d8_a377_7273b03e248c = 0.0
  thread Step_Counter_Thread_499a13a3_3305_4998_99b1_9a0e1679e1ff():
    while (True):
      step_count_e9b0f761_9097_41d8_a377_7273b03e248c = step_count_e9b0f761_9097_41d8_a377_7273b03e248c + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_499a13a3_3305_4998_99b1_9a0e1679e1ff()
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_gravity([0.0, 0.0, 9.82])
  set_safety_mode_transition_hardness(1)
  set_target_payload(0.530000, [0.009000, -0.039000, 0.092000], [0.000534, 0.000534, 0.000534, 0.000000, 0.000000, 0.000000])
  global Al_plate=p[0.12405209206180495,-0.2666666051843552,0.020008101224669964,-9.276623980477388E-5,1.8107917580596192E-5,3.1233857134705927]
  global Frame2x2=p[0.18266245434305164,-0.34273121659514855,0.026002571110600767,-2.225423529876215E-4,3.0110667546023537E-4,3.1233976058306383]
  global Plane_1=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global URlogoTutorial=p[-0.08178353973148575,-0.3363174165299142,0.04788621506469384,-3.9746155723688456E-5,-3.4682148779121894E-5,-1.5668291789091222]
  global carousel=p[0.13865255139760183,-0.25132593351268107,0.051531504137083003,-4.453572132438073E-5,-1.3071222590669835E-4,-3.1349676625391965]
  global carouselrod=p[0.2020731702281844,-0.34951442511341274,0.1947611446273096,3.139766958234101,-0.10689428010274801,-1.1796370330365635E-5]
  global paper=p[-0.09670794781244417,-0.3283412964648025,0.027665994240809913,-3.2057893450593004E-5,2.867088716161181E-5,-1.6085327915291054]
  global rod=p[0.13368013097420872,-0.41123185103490206,0.09926814901395645,2.2214229924093103,-2.2214158162465862,-2.9165882738638143E-5]
  # begin: URCap Installation Node
  #   Source: External Control, 1.0.5, FZI Research Center for Information Technology
  #   Type: External Control
  # end: URCap Installation Node
  global timer_1=0
  global c1_p=p[.157577147953, -.388190086959, .151522802335, -3.141047500236, -.055722937685, .000049173003]
  global c1_q=[-0.8664591948138636, -1.9946533642210902, -1.2442758083343506, -1.4727600377849122, 1.5722702741622925, 3.80899977684021]
  global Waypoint_8_p=p[-.150427162654, -.390225762120, .151546909862, -3.141036571135, -.055876152350, -.000047259053]
  global Waypoint_8_q=[-1.6194260756122034, -1.9913011989989222, -1.2490886449813843, -1.4713011544993897, 1.5722861289978027, 3.055936574935913]
  global Waypoint_9_p=p[-.150708861961, -.348227279771, .151556678779, -3.140981415271, -.055839736306, -.000005615584]
  global Waypoint_9_q=[-1.6259835402118128, -1.8204313717284144, -1.484473705291748, -1.4068395358375092, 1.5721334218978882, 3.049475908279419]
  global c2_p=p[.157334690756, -.346187468466, .151541407059, -3.140997979648, -.055849351266, -.000096657697]
  global c2_q=[-0.7918246428119105, -1.8239737949767054, -1.4800207614898682, -1.4076639872840424, 1.5722535848617554, 3.8836276531219482]
  global c3_p=p[.157083701424, -.312184047431, .151537015881, -3.141022089074, -.055797227736, -.000052619000]
  global c3_q=[-0.7196467558490198, -1.6905099354186, -1.6421176195144653, -1.379027785067894, 1.572106122970581, 3.9558956623077393]
  global Waypoint_11_p=p[-.150940969920, -.314230691157, .151536383906, -3.140942113866, -.055656910778, .000084669065]
  global Waypoint_11_q=[-1.6325328985797327, -1.686746736566061, -1.6463444232940674, -1.3786910337260743, 1.5719581842422485, 3.0430991649627686]
  global Waypoint_10_p=p[-.151215527839, -.272202295578, .151528000621, -3.140750457776, -.055565181978, -.000054283277]
  global Waypoint_10_q=[-1.642848316823141, -1.5211668771556397, -1.818166971206665, -1.37264800191436, 1.5718692541122437, 3.0329036712646484]
  global c4_p=p[.156798309975, -.270188328283, .151523853386, -3.140995537507, -.055867543787, -.000025290066]
  global c4_q=[-0.6114972273456019, -1.5255678755095978, -1.8141570091247559, -1.371950702076294, 1.5719618797302246, 4.064064025878906]
  global chipC_p=p[-.099700577098, -.183627440197, .208433402457, 3.139691259007, -.105394058226, -.000149781669]
  global chipC_q=[-1.3891781012164515, -1.0096948903850098, -1.88504958152771, -1.8167749843993128, 1.5708818435668945, 3.388993501663208]
  global Waypoint_15_p=p[-.099704296715, -.202951379992, .208432580258, 3.139670120847, -.105426183766, -.000160358536]
  global Waypoint_15_q=[-1.4082286993609827, -1.099871740942337, -1.8470300436019897, -1.764597078362936, 1.5709946155548096, 3.369927167892456]
  global Waypoint_16_p=p[-.125097928533, -.271984222044, .188211676824, -3.139810722578, .105446315311, .000070958927]
  global Waypoint_16_q=[-1.5480602423297327, -1.4491210740855713, -1.7099264860153198, -1.552596167927124, 1.5715936422348022, 3.23006010055542]
  global Waypoint_17_p=p[-.141183217597, -.367684006591, .188213447751, 3.139821760490, -.105397104768, -.000067867997]
  global Waypoint_17_q=[-1.597567383443014, -1.8740092716612757, -1.241610050201416, -1.5960084400572718, 1.5719740390777588, 3.1803600788116455]
  global Waypoint_18_p=p[-.141178244459, -.367687282910, .108904454765, 3.139816402425, -.105408093734, -.000060814483]
  global Waypoint_18_q=[-1.5975983778582972, -1.9245020351805628, -1.550661325454712, -1.2364590925029297, 1.5723340511322021, 3.1807193756103516]
  global Waypoint_19_p=p[-.141189357305, -.367687267469, .108915260822, 3.121780755938, .351957921543, -.000099281586]
  global Waypoint_19_q=[-1.5976179281817835, -1.9244748554625453, -1.550661325454712, -1.2364507478526612, 1.572314977645874, 2.889045000076294]
  global Waypoint_20_p=p[-.141176698746, -.367682773595, .108907204798, -3.111042719163, .436975672702, .000063164110]
  global Waypoint_20_q=[-1.5975945631610315, -1.9244939289488734, -1.5506495237350464, -1.2365017098239441, 1.5723340511322021, 3.3926987648010254]
  global Waypoint_21_p=p[-.141174078526, -.367696805030, .108909057026, 3.139786221315, -.105395786134, -.000060564502]
  global Waypoint_21_q=[-1.597586456929342, -1.9245058498778285, -1.5506460666656494, -1.2364399594119568, 1.5723340511322021, 3.1807241439819336]
  global Waypoint_22_p=p[-.125093999497, -.367099400456, .187371407622, 3.139783011421, -.105392168035, -.000053869150]
  global Waypoint_22_q=[-1.5538747946368616, -1.846323629418844, -1.2822730541229248, -1.5829936466612757, 1.5719654560089111, 3.224064588546753]
  global Waypoint_23_p=p[-.120064390322, -.465070651334, .187365924664, 2.700279766902, -.088400420341, .019763045538]
  global Waypoint_23_q=[-1.5412524382220667, -1.9475652180113734, -1.406833291053772, -0.9173591893962403, 1.5603561401367188, 3.2332537174224854]
  global Waypoint_24_p=p[-.125099110421, -.299097154487, .189878767902, 3.139750209928, -.105401717856, -.000111797080]
  global Waypoint_24_q=[-1.550074879323141, -1.5617311683348198, -1.5979981422424316, -1.5518303674510499, 1.5716702938079834, 3.2279696464538574]
  global Waypoint_1_p=p[.263501689877, -.337317763427, .239349489480, 3.139797243720, -.105347053477, -.000037720516]
  global Waypoint_1_q=[-0.5959728399859827, -2.1057659588255824, -0.6533136367797852, -1.9525557957091273, 1.5718059539794922, 4.181682586669922]
  global Waypoint_2_p=p[.265438435610, -.352444474661, .141740907029, 3.139726376264, -.105360108121, -.000022031768]
  global Waypoint_2_q=[-0.6231134573565882, -2.1016999683775843, -1.126999020576477, -1.4828875821879883, 1.5722739696502686, 4.154912948608398]
  global Waypoint_3_p=p[.206441973084, -.349241721273, .141737893294, 3.139734184252, -.105329347268, -.000022485776]
  global Waypoint_3_q=[-0.7073677221881312, -1.9410401783385218, -1.3681066036224365, -1.4024366003325959, 1.5721865892410278, 4.070710182189941]
  global Waypoint_4_p=p[.157616611756, -.378012026932, .141738203587, 3.139764187573, -.105376653239, -.000076760662]
  global Waypoint_4_q=[-0.8494070211993616, -1.9579774341978968, -1.3439116477966309, -1.409730003481247, 1.5722019672393799, 3.928692579269409]
  global Waypoint_5_p=p[.109134761588, -.393436595889, .141742225598, 3.139732501163, -.105376381431, -.000050533951]
  global Waypoint_5_q=[-0.972816292439596, -1.9523960552611292, -1.3519116640090942, -1.4072665137103577, 1.5721949338912964, 3.805286407470703]
  global Waypoint_6_p=p[-.188131250090, -.345166366147, .141750553976, 3.139727051239, -.105353578209, -.000024875816]
  global Waypoint_6_q=[-1.7293437162982386, -1.8864180050291957, -1.4439769983291626, -1.381135032778122, 1.572224736213684, 3.0487747192382812]
  global Waypoint_7_p=p[-.131564048097, -.216205376465, .141741700579, 3.139714533984, -.105382776464, -.000044168049]
  global Waypoint_7_q=[-1.572542969380514, -1.2417927545360108, -2.0833356380462646, -1.3863917154124756, 1.571577787399292, 3.2058310508728027]
  global timer_1_is_counting=False
  thread Timer_Thread():
    while (True):
      if (timer_1_is_counting):
        timer_1 = timer_1 + get_steptime()
      end
      sync()
    end
  end
  run Timer_Thread()
  def Spraychip2():
    $ 379 "Spraychip2" "noBreak"
    $ 380 "MoveJ"
    $ 381 "chipC" "breakAfter"
    movej(get_inverse_kin(chipC_p, qnear=chipC_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 382 "c≔chipC"
    global c=chipC_p
    $ 383 "rc≔27/1000"
    global rc=27/1000
    $ 384 "p0≔p[c[0]+rc,c[1],c[2],c[3],c[4],c[5]-1.5*0]"
    global p0=p[c[0]+rc,c[1],c[2],c[3],c[4],c[5]-1.5*0]
    $ 385 "p45≔p[c[0]+0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]-0/1.1]"
    global p45=p[c[0]+0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]-0/1.1]
    $ 386 "p90≔p[c[0],c[1]+rc,c[2],c[3]-0,c[4],c[5]]"
    global p90=p[c[0],c[1]+rc,c[2],c[3]-0,c[4],c[5]]
    $ 387 "p135≔p[c[0]-0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]+0/1.1]"
    global p135=p[c[0]-0.71*rc,c[1]+0.71*rc,c[2],c[3]-0/1.1,c[4],c[5]+0/1.1]
    $ 388 "p180≔p[c[0]-rc,c[1],c[2],c[3],c[4],c[5]+1.5*0]"
    global p180=p[c[0]-rc,c[1],c[2],c[3],c[4],c[5]+1.5*0]
    $ 389 "p225≔p[c[0]-0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]+0/1.1]"
    global p225=p[c[0]-0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]+0/1.1]
    $ 390 "p270≔p[c[0],c[1]-rc,c[2],c[3]+0,c[4],c[5]]"
    global p270=p[c[0],c[1]-rc,c[2],c[3]+0,c[4],c[5]]
    $ 391 "p315≔p[c[0]+0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]-0/1.1]"
    global p315=p[c[0]+0.71*rc,c[1]-0.71*rc,c[2],c[3]+0/1.1,c[4],c[5]-0/1.1]
    $ 392 "Set atomization=On"
    set_standard_digital_out(1, True)
    $ 393 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 394 "MoveL"
    $ 395 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.3, v=0.07, r=0.01)
    $ 396 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.3, v=0.07, r=0.01)
    $ 397 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.3, v=0.07, r=0.01)
    $ 398 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.3, v=0.07, r=0.01)
    $ 399 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.3, v=0.07, r=0.01)
    $ 400 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 401 "Wait: 0.1"
    sleep(0.1)
    $ 402 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 403 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.3, v=0.07, r=0.01)
    $ 404 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.3, v=0.07, r=0.01)
    $ 405 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.3, v=0.07, r=0.01)
    $ 406 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.3, v=0.07, r=0.01)
    $ 407 "p45" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p45, a=1.3, v=0.07, r=0.01)
    $ 408 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 409 "Wait: 0.1"
    sleep(0.1)
    $ 410 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 411 "p90" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p90, a=1.3, v=0.07, r=0.01)
    $ 412 "p135" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p135, a=1.3, v=0.07, r=0.01)
    $ 413 "p180" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p180, a=1.3, v=0.07, r=0.01)
    $ 414 "p225" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p225, a=1.3, v=0.07, r=0.01)
    $ 415 "p270" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p270, a=1.3, v=0.07, r=0.01)
    $ 416 "p315" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p315, a=1.3, v=0.07, r=0.01)
    $ 417 "p0" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movel(p0, a=1.3, v=0.07, r=0.01)
    $ 418 "MoveJ"
    $ 419 "Waypoint_15" "breakAfter"
    movej(get_inverse_kin(Waypoint_15_p, qnear=Waypoint_15_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 420 "Wait: 0.2"
    sleep(0.2)
    $ 421 "Set atomization=Off"
    set_standard_digital_out(1, False)
    $ 422 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
  end
  def clean():
    $ 465 "clean" "noBreak"
    $ 466 "MoveJ"
    $ 467 "Waypoint_16" "breakAfter"
    movej(get_inverse_kin(Waypoint_16_p, qnear=Waypoint_16_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 468 "Waypoint_17" "breakAfter"
    movej(get_inverse_kin(Waypoint_17_p, qnear=Waypoint_17_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 469 "MoveL"
    $ 470 "Waypoint_18" "breakAfter"
    movel(Waypoint_18_p, a=1.2, v=0.05)
    $ 471 "MoveL"
    $ 472 "Waypoint_19" "breakAfter"
    movel(Waypoint_19_p, a=1.2, v=0.05)
    $ 473 "MoveL"
    $ 474 "Waypoint_20" "breakAfter"
    movel(Waypoint_20_p, a=1.2, v=0.05)
    $ 475 "MoveL"
    $ 476 "Waypoint_21" "breakAfter"
    movel(Waypoint_21_p, a=1.2, v=0.05)
    $ 477 "MoveL"
    $ 478 "Waypoint_22" "breakAfter"
    movel(Waypoint_22_p, a=1.2, v=0.25)
    $ 479 "MoveJ"
    $ 480 "Waypoint_23" "breakAfter"
    movej(get_inverse_kin(Waypoint_23_p, qnear=Waypoint_23_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 481 "Set atomization=On"
    set_standard_digital_out(1, True)
    $ 482 "Set triggersolenoid=On"
    set_standard_digital_out(0, True)
    $ 483 "Wait: 0.2"
    sleep(0.2)
    $ 484 "Set atomization=Off"
    set_standard_digital_out(1, False)
    $ 485 "Set triggersolenoid=Off"
    set_standard_digital_out(0, False)
    $ 486 "MoveJ"
    $ 487 "Waypoint_24" "breakAfter"
    movej(get_inverse_kin(Waypoint_24_p, qnear=Waypoint_24_q), a=1.3962634015954636, v=1.0471975511965976)
  end
  def turntable():
    $ 488 "turntable" "noBreak"
    $ 489 "MoveJ"
    $ 490 "Waypoint_1" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115589, .194760490875, -3.139766958133, .106894280099, .000011796372], Waypoint_1_p)), qnear=Waypoint_1_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 491 "Waypoint_2" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115589, .194760490875, -3.139766958133, .106894280099, .000011796372], Waypoint_2_p)), qnear=Waypoint_2_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 492 "Waypoint_3" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115589, .194760490875, -3.139766958133, .106894280099, .000011796372], Waypoint_3_p)), qnear=Waypoint_3_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 493 "Waypoint_4" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115589, .194760490875, -3.139766958133, .106894280099, .000011796372], Waypoint_4_p)), qnear=Waypoint_4_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 494 "Waypoint_5" "breakAfter"
    set_tcp(p[0.0,0.0,0.11,0.0,0.0,0.0])
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115589, .194760490875, -3.139766958133, .106894280099, .000011796372], Waypoint_5_p)), qnear=Waypoint_5_q), a=1.3962634015954636, v=0.5235987755982988, r=0.02)
    $ 495 "MoveJ"
    $ 496 "Waypoint_6" "breakAfter"
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115589, .194760490875, -3.139766958133, .106894280099, .000011796372], Waypoint_6_p)), qnear=Waypoint_6_q), a=1.3962634015954636, v=0.3141592653589793)
    $ 497 "Wait: 1.0"
    sleep(1.0)
    $ 498 "MoveJ"
    $ 499 "Waypoint_7" "breakAfter"
    movej(get_inverse_kin(pose_trans(carouselrod, pose_trans(p[-.225374943892, -.334963115589, .194760490875, -3.139766958133, .106894280099, .000011796372], Waypoint_7_p)), qnear=Waypoint_7_q), a=1.3962634015954636, v=1.0471975511965976, r=0.02)
  end
  while (True):
    $ 2 "Robot Program"
    $ 3 "'Program to be used for part #120330-031 rev A BEO beam dump arm'"
    # 'Program to be used for part #120330-031 rev A BEO beam dump arm'
    $ 4 "'Program rev ___: mm/dd/yy note'"
    # 'Program rev ___: mm/dd/yy note'
    $ 5 "timer_1: Start"
    timer_1_is_counting = True
    $ 6 "r≔25/1000"
    global r=25/1000
    $ 7 "A≔30"
    global A=30
    $ 8 "A≔A*3.1416/180"
    global A=A*3.1416/180
    $ 11 "partnum≔2"
    global partnum=2
    $ 12 "coatnum≔2"
    global coatnum=2
    $ 13 "sidenum≔4"
    global sidenum=4
    $ 14 "Loop_1≔1"
    global Loop_1=1
    $ 15 "'NOTE: program not meant to run w/ parts on the side w/ chip and cleaning cup'"
    # 'NOTE: program not meant to run w/ parts on the side w/ chip and cleaning cup'
    $ 131 "If partnum≤sidenum"
    global thread_flag_131=0
    thread Thread_if_131():
      $ 132 "Loop (coatnum)>0"
      thread Thread_while_132():
        while (True):
          $ 133 "partleft≔partnum"
          global partleft=partnum
          $ 134 "loopnum≔1"
          global loopnum=1
          $ 135 "Loop partleft>0"
          thread Thread_while_135():
            while (True):
              $ 136 "Call clean"
              clean()
              $ 137 "Call Spraychip2"
              Spraychip2()
              $ 138 "If loopnum≟1 or loopnum≟5 or loopnum≟9"
              global thread_flag_138=0
              thread Thread_if_138():
                $ 139 "MoveJ"
                $ 140 "c1" "breakAfter"
                movej(get_inverse_kin(c1_p, qnear=c1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 141 "Set atomization=On"
                set_standard_digital_out(1, True)
                $ 142 "Set triggersolenoid=On"
                set_standard_digital_out(0, True)
                $ 143 "MoveL"
                $ 144 "Waypoint_8" "breakAfter"
                movel(Waypoint_8_p, a=1.2, v=0.2)
                $ 145 "Set triggersolenoid=Off"
                set_standard_digital_out(0, False)
                $ 146 "Wait: 0.1"
                sleep(0.1)
                $ 147 "Set atomization=Off"
                set_standard_digital_out(1, False)
                thread_flag_138 = 1
              end
              if (loopnum == 1  or  loopnum == 5  or  loopnum == 9):
                global thread_handler_138=run Thread_if_138()
                while (thread_flag_138 == 0):
                  if not(loopnum == 1  or  loopnum == 5  or  loopnum == 9):
                    kill thread_handler_138
                    thread_flag_138 = 2
                  else:
                    sync()
                  end
                end
              else:
                thread_flag_138 = 2
              end
              if (thread_flag_138 == 2):
                $ 148 "ElseIf loopnum≟2 or loopnum≟6 or loopnum≟10"
                if (loopnum == 2  or  loopnum == 6  or  loopnum == 10):
                  $ 168 "MoveJ"
                  $ 169 "Waypoint_9" "breakAfter"
                  movej(get_inverse_kin(Waypoint_9_p, qnear=Waypoint_9_q), a=1.3962634015954636, v=1.0471975511965976)
                  $ 170 "Set atomization=On"
                  set_standard_digital_out(1, True)
                  $ 171 "Set triggersolenoid=On"
                  set_standard_digital_out(0, True)
                  $ 172 "MoveL"
                  $ 173 "c2" "breakAfter"
                  movel(c2_p, a=1.2, v=0.2)
                  $ 174 "Set triggersolenoid=Off"
                  set_standard_digital_out(0, False)
                  $ 175 "Wait: 0.1"
                  sleep(0.1)
                  $ 176 "Set atomization=Off"
                  set_standard_digital_out(1, False)
                else:
                  $ 177 "ElseIf loopnum≟3 or loopnum≟7 or loopnum≟11"
                  if (loopnum == 3  or  loopnum == 7  or  loopnum == 11):
                    $ 178 "MoveJ"
                    $ 179 "c3" "breakAfter"
                    movej(get_inverse_kin(c3_p, qnear=c3_q), a=1.3962634015954636, v=1.0471975511965976)
                    $ 180 "Set atomization=On"
                    set_standard_digital_out(1, True)
                    $ 181 "Set triggersolenoid=On"
                    set_standard_digital_out(0, True)
                    $ 182 "MoveL"
                    $ 183 "Waypoint_11" "breakAfter"
                    movel(Waypoint_11_p, a=1.2, v=0.2)
                    $ 184 "Set triggersolenoid=Off"
                    set_standard_digital_out(0, False)
                    $ 185 "Wait: 0.1"
                    sleep(0.1)
                    $ 186 "Set atomization=Off"
                    set_standard_digital_out(1, False)
                  else:
                    $ 187 "Else" "noBreak"
                    $ 208 "MoveJ"
                    $ 209 "Waypoint_10" "breakAfter"
                    movej(get_inverse_kin(Waypoint_10_p, qnear=Waypoint_10_q), a=1.3962634015954636, v=1.0471975511965976)
                    $ 210 "Set atomization=On"
                    set_standard_digital_out(1, True)
                    $ 211 "Set triggersolenoid=On"
                    set_standard_digital_out(0, True)
                    $ 212 "MoveL"
                    $ 213 "c4" "breakAfter"
                    movel(c4_p, a=1.2, v=0.2)
                    $ 214 "Set triggersolenoid=Off"
                    set_standard_digital_out(0, False)
                    $ 215 "Wait: 0.1"
                    sleep(0.1)
                    $ 216 "Set atomization=Off"
                    set_standard_digital_out(1, False)
                  end
                end
              end
              $ 217 "loopnum≔loopnum+1"
              global loopnum=loopnum+1
              $ 218 "partleft≔partleft-1"
              global partleft=partleft-1
            end
          end
          if (partleft>0):
            global thread_handler_135=run Thread_while_135()
            while (partleft>0):
              sync()
            end
            kill thread_handler_135
          end
          $ 219 "i≔0"
          global i=0
          $ 220 "coatnum≔coatnum-1"
          global coatnum=coatnum-1
        end
      end
      if ((coatnum)>0):
        global thread_handler_132=run Thread_while_132()
        while ((coatnum)>0):
          sync()
        end
        kill thread_handler_132
      end
      $ 221 "Halt"
      halt
      thread_flag_131 = 1
    end
    if (partnum <= sidenum):
      global thread_handler_131=run Thread_if_131()
      while (thread_flag_131 == 0):
        if not(partnum <= sidenum):
          kill thread_handler_131
          thread_flag_131 = 2
        else:
          sync()
        end
      end
    else:
      thread_flag_131 = 2
    end
    if (thread_flag_131 == 2):
      $ 222 "Else" "noBreak"
      $ 223 "Loop (coatnum)>0"
      thread Thread_while_223():
        while (True):
          $ 224 "partleft≔partnum"
          global partleft=partnum
          $ 225 "loopnum≔1"
          global loopnum=1
          $ 226 "turnnum≔0"
          global turnnum=0
          $ 227 "Loop partleft>0"
          thread Thread_while_227():
            while (True):
              $ 228 "Call clean"
              clean()
              $ 229 "Call Spraychip2"
              Spraychip2()
              $ 230 "If loopnum≟1 or loopnum≟5 or loopnum≟9"
              global thread_flag_230=0
              thread Thread_if_230():
                $ 250 "MoveJ"
                $ 251 "c1" "breakAfter"
                movej(get_inverse_kin(c1_p, qnear=c1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 252 "Set atomization=On"
                set_standard_digital_out(1, True)
                $ 253 "Set triggersolenoid=On"
                set_standard_digital_out(0, True)
                $ 254 "MoveL"
                $ 255 "Waypoint_8" "breakAfter"
                movel(Waypoint_8_p, a=1.2, v=0.2)
                $ 256 "Set triggersolenoid=Off"
                set_standard_digital_out(0, False)
                $ 257 "Wait: 0.1"
                sleep(0.1)
                $ 258 "Set atomization=Off"
                set_standard_digital_out(1, False)
                thread_flag_230 = 1
              end
              if (loopnum == 1  or  loopnum == 5  or  loopnum == 9):
                global thread_handler_230=run Thread_if_230()
                while (thread_flag_230 == 0):
                  if not(loopnum == 1  or  loopnum == 5  or  loopnum == 9):
                    kill thread_handler_230
                    thread_flag_230 = 2
                  else:
                    sync()
                  end
                end
              else:
                thread_flag_230 = 2
              end
              if (thread_flag_230 == 2):
                $ 259 "ElseIf loopnum≟2 or loopnum≟6 or loopnum≟10"
                if (loopnum == 2  or  loopnum == 6  or  loopnum == 10):
                  $ 279 "MoveJ"
                  $ 280 "Waypoint_9" "breakAfter"
                  movej(get_inverse_kin(Waypoint_9_p, qnear=Waypoint_9_q), a=1.3962634015954636, v=1.0471975511965976)
                  $ 281 "Set atomization=On"
                  set_standard_digital_out(1, True)
                  $ 282 "Set triggersolenoid=On"
                  set_standard_digital_out(0, True)
                  $ 283 "MoveL"
                  $ 284 "c2" "breakAfter"
                  movel(c2_p, a=1.2, v=0.2)
                  $ 285 "Set triggersolenoid=Off"
                  set_standard_digital_out(0, False)
                  $ 286 "Wait: 0.1"
                  sleep(0.1)
                  $ 287 "Set atomization=Off"
                  set_standard_digital_out(1, False)
                else:
                  $ 288 "ElseIf loopnum≟3 or loopnum≟7 or loopnum≟11"
                  if (loopnum == 3  or  loopnum == 7  or  loopnum == 11):
                    $ 289 "MoveJ"
                    $ 290 "c3" "breakAfter"
                    movej(get_inverse_kin(c3_p, qnear=c3_q), a=1.3962634015954636, v=1.0471975511965976)
                    $ 291 "Set atomization=On"
                    set_standard_digital_out(1, True)
                    $ 292 "Set triggersolenoid=On"
                    set_standard_digital_out(0, True)
                    $ 293 "MoveL"
                    $ 294 "Waypoint_11" "breakAfter"
                    movel(Waypoint_11_p, a=1.2, v=0.2)
                    $ 295 "Set triggersolenoid=Off"
                    set_standard_digital_out(0, False)
                    $ 296 "Wait: 0.1"
                    sleep(0.1)
                    $ 297 "Set atomization=Off"
                    set_standard_digital_out(1, False)
                  else:
                    $ 298 "Else" "noBreak"
                    $ 319 "MoveJ"
                    $ 320 "Waypoint_10" "breakAfter"
                    movej(get_inverse_kin(Waypoint_10_p, qnear=Waypoint_10_q), a=1.3962634015954636, v=1.0471975511965976)
                    $ 321 "Set atomization=On"
                    set_standard_digital_out(1, True)
                    $ 322 "Set triggersolenoid=On"
                    set_standard_digital_out(0, True)
                    $ 323 "MoveL"
                    $ 324 "c4" "breakAfter"
                    movel(c4_p, a=1.2, v=0.2)
                    $ 325 "Set triggersolenoid=Off"
                    set_standard_digital_out(0, False)
                    $ 326 "Wait: 0.1"
                    sleep(0.1)
                    $ 327 "Set atomization=Off"
                    set_standard_digital_out(1, False)
                  end
                end
              end
              $ 328 "loopnum≔loopnum+1"
              global loopnum=loopnum+1
              $ 329 "partleft≔partleft-1"
              global partleft=partleft-1
            end
          end
          if (partleft>0):
            global thread_handler_227=run Thread_while_227()
            while (partleft>0):
              sync()
            end
            kill thread_handler_227
          end
          $ 330 "i≔0"
          global i=0
          $ 331 "Loop (6-turnnum)>0"
          thread Thread_while_331():
            while (True):
              $ 332 "Call turntable"
              turntable()
              $ 333 "turnnum≔turnnum+1"
              global turnnum=turnnum+1
            end
          end
          if ((6-turnnum)>0):
            global thread_handler_331=run Thread_while_331()
            while ((6-turnnum)>0):
              sync()
            end
            kill thread_handler_331
          end
          $ 334 "coatnum≔coatnum-1"
          global coatnum=coatnum-1
        end
      end
      if ((coatnum)>0):
        global thread_handler_223=run Thread_while_223()
        while ((coatnum)>0):
          sync()
        end
        kill thread_handler_223
      end
      $ 335 "Halt"
      halt
    end
  end
end
